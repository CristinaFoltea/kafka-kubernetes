version: '2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: "${KAFKA_SERVER:-kafka}"
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  api:
    build: api
    command: ["flask", "run", "--host=0.0.0.0"]
    volumes:
      - ./services/api:/backend
    environment:
      - FLASK_ENV=development
      - FLASK_APP=app.py
    ports:
      - "5000:5000"
    client:
      build: client
      command: ["npm", "start"]
      volumes:
        - ./services/client:/frontend
        - node-modules:/frontend/node_modules
      environment:
        - NODE_ENV=development
      ports:
        - '3000:3000'
      depends_on:
        - api

  producer:
    build: python/kafka-prod/
    image: kafka-prod-python
    ports:
      - "${FLASK_PORT:-5000}:${FLASK_PORT:-5000}"
    environment:
      KAFKA_SERVER: "${KAFKA_SERVER:-kafka}"
      KAFKA_PORT: "${KAFKA_SERVER:-9092}"
      KAFKA_TOPIC: "${KAFKA_TOPIC:-test}"
      FLASK_HOST: "${FLASK_HOST:-0.0.0.0}"
      FLASK_PORT: "${FLASK_PORT:-5000}"
    tty: true
    stdin_open: true

  consumer:
    build: python/kafka-cons/
    image: kafka-cons-python
    environment:
      KAFKA_SERVER: "${KAFKA_SERVER:-kafka}"
      KAFKA_PORT: "${KAFKA_SERVER:-9092}"
      KAFKA_TOPIC: "${KAFKA_TOPIC:-test}"
      PRODUCER_HOST: "${PRODUCER_HOST:-producer}"
      PRODUCER_PORT: "${FLASK_PORT:-5000}"
      PRODUCER_MSG_ENDPOINT: "${PRODUCER_MSG_ENDPOINT:-messages}"
    tty: true
    stdin_open: true
